name: Ruby

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Test on ${{ matrix.os.name }} (${{ matrix.ruby.name }})
    strategy:
      fail-fast: false
      matrix:
        os:
          - { name: Ubuntu, value: ubuntu-22.04 }

        ruby:
          - { name: ruby-3.0, value: 3.0.6 }
          - { name: ruby-3.1, value: 3.1.4 }
          - { name: ruby-3.2, value: 3.2.2 }

        include:
          - os: { name: macOS, value: macos-12 }
            ruby: { name: ruby-3.0, value: 3.0.6 }
            timeout: 10
          - os: { name: macOS, value: macos-12 }
            ruby: { name: ruby-3.1, value: 3.1.4 }
            timeout: 10
          - os: { name: macOS, value: macos-12 }
            ruby: { name: ruby-3.2, value: 3.2.2 }
            timeout: 10
          - os: { name: Windows, value: windows-2022 }
            ruby: { name: ruby-3.0, value: 3.0.6 }
            timeout: 20
          - os: { name: Windows, value: windows-2022 }
            ruby: { name: ruby-3.1, value: 3.1.4 }
            timeout: 20
          - os: { name: Windows, value: windows-2022 }
            ruby: { name: ruby-3.2, value: 3.2.2 }
            timeout: 20
          - ruby: { name: truffleruby-23, value: truffleruby-23.1.1 }
            timeout: 20
          - ruby: { name: jruby-9.4, value: jruby-9.4 }
            timeout: 20

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby.value }}
          bundler-cache: true
      - name: Run the default task
        run: bin/rake

  all:
    name: Test All
    needs: [build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      # will run /bin/true or /bin/false depending on the result of the build job
      - run: /bin/${{ (needs.build.result == 'success' || needs.build.result == 'skipped') }}
